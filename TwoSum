/* Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order. 
Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1] 
*/

Code: 
#include <stdio.h>

int main(){
    int n, arr[100], target;
    
    // Nhập số phần tử của mảng
    scanf("%d", &n);
    
    // Nhập các phần tử của mảng
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    // Nhập giá trị target
    scanf("%d", &target);
    
    // Tìm hai chỉ số thỏa mãn arr[i] + arr[j] = target
    for (int i = 0; i < n; i++){
        int result = target - arr[i];
        for (int j = i+1; j < n; j++){
            if (arr[j] == result) {
                // In ra kết quả và thoát chương trình
                printf("%d %d\n", i, j);
                return 0; // trong trường hợp nếu muốn hiển thị ngoài 1 kết quả, thay return 0 thành break;
            }
        }
    }
    
    return 0;
}

With Function: 
#include <stdio.h>

void TwoSum(int n, int arr[], int target) {
    for (int i = 0; i < n; i++) {
        int result = target - arr[i];
        for (int j = i+1; j < n; j++) {
            if (arr[j] == result) {
                printf("%d %d\n", i, j);
                return;  /* Thoát ngay khi tìm thấy cặp thỏa mãn, 
                            nếu không có thể sử dụng break nếu muốn hiển thị ngoài 1 kết quả */
            }
        }
    }    
}

int main() {
    int n, arr[100], target;
    
    // Nhập số phần tử và các phần tử của mảng
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    
    // Nhập giá trị target
    scanf("%d", &target);
    
    // Gọi hàm TwoSum
    TwoSum(n, arr, target);
    
    return 0;
}

